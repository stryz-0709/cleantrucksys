// Generated by view binder compiler. Do not edit!
package com.aasolution.cleantrucksys.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aasolution.cleantrucksys.R;
import com.github.anastr.speedviewlib.SpeedView;
import com.github.angads25.toggle.widget.LabeledSwitch;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentManualBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final LabeledSwitch armButton;

  @NonNull
  public final RelativeLayout homeButton;

  @NonNull
  public final RelativeLayout manualBody;

  @NonNull
  public final RelativeLayout manualTitle;

  @NonNull
  public final ToggleButton robotBackwardButton;

  @NonNull
  public final ToggleButton robotForwardButton;

  @NonNull
  public final ToggleButton robotPower;

  @NonNull
  public final ImageView robotPowerGradient;

  @NonNull
  public final ToggleButton robotStopButton;

  @NonNull
  public final LabeledSwitch tankInButton;

  @NonNull
  public final ToggleButton tankPower;

  @NonNull
  public final ImageView tankPowerGradient;

  @NonNull
  public final LabeledSwitch vacuumButton;

  @NonNull
  public final LabeledSwitch vacuumOutButton;

  @NonNull
  public final ToggleButton vacuumPower;

  @NonNull
  public final ImageView vacuumPowerGradient;

  @NonNull
  public final SpeedView vacuumPressureGauge;

  @NonNull
  public final LabeledSwitch waterButton;

  @NonNull
  public final LabeledSwitch waterOutButton;

  @NonNull
  public final ToggleButton waterPower;

  @NonNull
  public final ImageView waterPowerGradient;

  @NonNull
  public final SpeedView waterPressureGauge;

  private FragmentManualBinding(@NonNull FrameLayout rootView, @NonNull LabeledSwitch armButton,
      @NonNull RelativeLayout homeButton, @NonNull RelativeLayout manualBody,
      @NonNull RelativeLayout manualTitle, @NonNull ToggleButton robotBackwardButton,
      @NonNull ToggleButton robotForwardButton, @NonNull ToggleButton robotPower,
      @NonNull ImageView robotPowerGradient, @NonNull ToggleButton robotStopButton,
      @NonNull LabeledSwitch tankInButton, @NonNull ToggleButton tankPower,
      @NonNull ImageView tankPowerGradient, @NonNull LabeledSwitch vacuumButton,
      @NonNull LabeledSwitch vacuumOutButton, @NonNull ToggleButton vacuumPower,
      @NonNull ImageView vacuumPowerGradient, @NonNull SpeedView vacuumPressureGauge,
      @NonNull LabeledSwitch waterButton, @NonNull LabeledSwitch waterOutButton,
      @NonNull ToggleButton waterPower, @NonNull ImageView waterPowerGradient,
      @NonNull SpeedView waterPressureGauge) {
    this.rootView = rootView;
    this.armButton = armButton;
    this.homeButton = homeButton;
    this.manualBody = manualBody;
    this.manualTitle = manualTitle;
    this.robotBackwardButton = robotBackwardButton;
    this.robotForwardButton = robotForwardButton;
    this.robotPower = robotPower;
    this.robotPowerGradient = robotPowerGradient;
    this.robotStopButton = robotStopButton;
    this.tankInButton = tankInButton;
    this.tankPower = tankPower;
    this.tankPowerGradient = tankPowerGradient;
    this.vacuumButton = vacuumButton;
    this.vacuumOutButton = vacuumOutButton;
    this.vacuumPower = vacuumPower;
    this.vacuumPowerGradient = vacuumPowerGradient;
    this.vacuumPressureGauge = vacuumPressureGauge;
    this.waterButton = waterButton;
    this.waterOutButton = waterOutButton;
    this.waterPower = waterPower;
    this.waterPowerGradient = waterPowerGradient;
    this.waterPressureGauge = waterPressureGauge;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentManualBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentManualBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_manual, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentManualBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arm_button;
      LabeledSwitch armButton = ViewBindings.findChildViewById(rootView, id);
      if (armButton == null) {
        break missingId;
      }

      id = R.id.homeButton;
      RelativeLayout homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.manual_body;
      RelativeLayout manualBody = ViewBindings.findChildViewById(rootView, id);
      if (manualBody == null) {
        break missingId;
      }

      id = R.id.manual_title;
      RelativeLayout manualTitle = ViewBindings.findChildViewById(rootView, id);
      if (manualTitle == null) {
        break missingId;
      }

      id = R.id.robot_backward_button;
      ToggleButton robotBackwardButton = ViewBindings.findChildViewById(rootView, id);
      if (robotBackwardButton == null) {
        break missingId;
      }

      id = R.id.robot_forward_button;
      ToggleButton robotForwardButton = ViewBindings.findChildViewById(rootView, id);
      if (robotForwardButton == null) {
        break missingId;
      }

      id = R.id.robot_power;
      ToggleButton robotPower = ViewBindings.findChildViewById(rootView, id);
      if (robotPower == null) {
        break missingId;
      }

      id = R.id.robot_power_gradient;
      ImageView robotPowerGradient = ViewBindings.findChildViewById(rootView, id);
      if (robotPowerGradient == null) {
        break missingId;
      }

      id = R.id.robot_stop_button;
      ToggleButton robotStopButton = ViewBindings.findChildViewById(rootView, id);
      if (robotStopButton == null) {
        break missingId;
      }

      id = R.id.tank_in_button;
      LabeledSwitch tankInButton = ViewBindings.findChildViewById(rootView, id);
      if (tankInButton == null) {
        break missingId;
      }

      id = R.id.tank_power;
      ToggleButton tankPower = ViewBindings.findChildViewById(rootView, id);
      if (tankPower == null) {
        break missingId;
      }

      id = R.id.tank_power_gradient;
      ImageView tankPowerGradient = ViewBindings.findChildViewById(rootView, id);
      if (tankPowerGradient == null) {
        break missingId;
      }

      id = R.id.vacuum_button;
      LabeledSwitch vacuumButton = ViewBindings.findChildViewById(rootView, id);
      if (vacuumButton == null) {
        break missingId;
      }

      id = R.id.vacuum_out_button;
      LabeledSwitch vacuumOutButton = ViewBindings.findChildViewById(rootView, id);
      if (vacuumOutButton == null) {
        break missingId;
      }

      id = R.id.vacuum_power;
      ToggleButton vacuumPower = ViewBindings.findChildViewById(rootView, id);
      if (vacuumPower == null) {
        break missingId;
      }

      id = R.id.vacuum_power_gradient;
      ImageView vacuumPowerGradient = ViewBindings.findChildViewById(rootView, id);
      if (vacuumPowerGradient == null) {
        break missingId;
      }

      id = R.id.vacuum_pressure_gauge;
      SpeedView vacuumPressureGauge = ViewBindings.findChildViewById(rootView, id);
      if (vacuumPressureGauge == null) {
        break missingId;
      }

      id = R.id.water_button;
      LabeledSwitch waterButton = ViewBindings.findChildViewById(rootView, id);
      if (waterButton == null) {
        break missingId;
      }

      id = R.id.water_out_button;
      LabeledSwitch waterOutButton = ViewBindings.findChildViewById(rootView, id);
      if (waterOutButton == null) {
        break missingId;
      }

      id = R.id.water_power;
      ToggleButton waterPower = ViewBindings.findChildViewById(rootView, id);
      if (waterPower == null) {
        break missingId;
      }

      id = R.id.water_power_gradient;
      ImageView waterPowerGradient = ViewBindings.findChildViewById(rootView, id);
      if (waterPowerGradient == null) {
        break missingId;
      }

      id = R.id.water_pressure_gauge;
      SpeedView waterPressureGauge = ViewBindings.findChildViewById(rootView, id);
      if (waterPressureGauge == null) {
        break missingId;
      }

      return new FragmentManualBinding((FrameLayout) rootView, armButton, homeButton, manualBody,
          manualTitle, robotBackwardButton, robotForwardButton, robotPower, robotPowerGradient,
          robotStopButton, tankInButton, tankPower, tankPowerGradient, vacuumButton,
          vacuumOutButton, vacuumPower, vacuumPowerGradient, vacuumPressureGauge, waterButton,
          waterOutButton, waterPower, waterPowerGradient, waterPressureGauge);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
