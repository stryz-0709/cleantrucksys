// Generated by view binder compiler. Do not edit!
package com.aasolution.cleantrucksys.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.aasolution.cleantrucksys.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProcessBBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ScrollView ScrollView;

  @NonNull
  public final RelativeLayout backButton;

  @NonNull
  public final RelativeLayout homeButton;

  @NonNull
  public final RelativeLayout manualTitle;

  @NonNull
  public final Button processB1;

  @NonNull
  public final Button processB2;

  private FragmentProcessBBinding(@NonNull FrameLayout rootView, @NonNull ScrollView ScrollView,
      @NonNull RelativeLayout backButton, @NonNull RelativeLayout homeButton,
      @NonNull RelativeLayout manualTitle, @NonNull Button processB1, @NonNull Button processB2) {
    this.rootView = rootView;
    this.ScrollView = ScrollView;
    this.backButton = backButton;
    this.homeButton = homeButton;
    this.manualTitle = manualTitle;
    this.processB1 = processB1;
    this.processB2 = processB2;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProcessBBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProcessBBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_process_b, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProcessBBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ScrollView;
      ScrollView ScrollView = ViewBindings.findChildViewById(rootView, id);
      if (ScrollView == null) {
        break missingId;
      }

      id = R.id.backButton;
      RelativeLayout backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.homeButton;
      RelativeLayout homeButton = ViewBindings.findChildViewById(rootView, id);
      if (homeButton == null) {
        break missingId;
      }

      id = R.id.manual_title;
      RelativeLayout manualTitle = ViewBindings.findChildViewById(rootView, id);
      if (manualTitle == null) {
        break missingId;
      }

      id = R.id.processB1;
      Button processB1 = ViewBindings.findChildViewById(rootView, id);
      if (processB1 == null) {
        break missingId;
      }

      id = R.id.processB2;
      Button processB2 = ViewBindings.findChildViewById(rootView, id);
      if (processB2 == null) {
        break missingId;
      }

      return new FragmentProcessBBinding((FrameLayout) rootView, ScrollView, backButton, homeButton,
          manualTitle, processB1, processB2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
